@model FSWDFinalProject.DATA.EF.Position

@{
    ViewBag.Title = "Edit";
}

<section id="resent-job-post" class="background-color-white">
    <div class="vertical-space-85"></div>
    <div class="container text-center">
        <h3 class="text-center">@ViewBag.Title</h3>
        <div class="vertical-space-30"></div>
        <div class="vertical-space-60"></div>
        <div class="detail">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.PositionId)

                    <div class="form-group" id="editCreateImage">
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.BookImage, new { htmlAttributes = new { @class = "form-control" } })*@
                            <input type="file" name="positionIcon" />
                            @*The name attribute value must match the parameter name in the POST version of the Create actionResult method that is in the controller*@
                            @Html.ValidationMessageFor(model => model.PositionImage, "", new { @class = "text-danger", placeholder= "Icon" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Position Title" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.JobDescription, new { htmlAttributes = new { @class = "form-control", placeholder = "Description" } })
                            @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" id="editCreateBtns">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn background-color-orange font-color-white"/>
                            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn background-color-white font-color-orange" })

                        </div>
                    </div>
                }

            </div>
        </div>
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
